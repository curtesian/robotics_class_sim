# Topic bridge between ROS 2 and Gazebo using ros bridge
- topic_name: "/camera/camera_info"
  ros_type_name: "sensor_msgs/msg/CameraInfo"
  gz_type_name: "gz.msgs.CameraInfo"

- topic_name: "/camera/front"
  ros_type_name: "sensor_msgs/msg/Image"
  gz_type_name: "gz.msgs.Image"

- topic_name: "/clock"
  ros_type_name: "rosgraph_msgs/msg/Clock"
  gz_type_name: "gz.msgs.Clock"

# might have to change TwistStamped to Twist depending on clock
- topic_name: "/cmd_vel"
  ros_type_name: "geometry_msgs/msg/TwistStamped"
  gz_type_name: "gz.msgs.Twist"

- topic_name: "/imu"
  ros_type_name: "sensor_msgs/msg/Imu"
  gz_type_name: "gz.msgs.IMU"

- topic_name: "/keyboard/keypress"
  ros_type_name: "std_msgs/msg/Int32"
  gz_type_name: "gz.msgs.Int32"

# Lidar
- topic_name: "/planarlaser"
  ros_type_name: "sensor_msgs/msg/LaserScan"
  gz_type_name: "gz.msgs.LaserScan"

- topic_name: "/planarlaser/points"
  ros_type_name: "sensor_msgs/msg/PointCloud2"
  gz_type_name: "gz.msgs.PointCloudPacked"

- topic_name: "/ultrasonic0"
  ros_type_name: "sensor_msgs/msg/LaserScan"
  gz_type_name: "gz.msgs.LaserScan"

- topic_name: "/ultrasonic0/points"
  ros_type_name: "sensor_msgs/msg/PointCloud2"
  gz_type_name: "gz.msgs.PointCloudPacked"

- topic_name: "/vertlidar"
  ros_type_name: "sensor_msgs/msg/LaserScan"
  gz_type_name: "gz.msgs.LaserScan"

- topic_name: "/vertlidar/points"
  ros_type_name: "sensor_msgs/msg/PointCloud2"
  gz_type_name: "gz.msgs.PointCloudPacked"

# TOF Cameras
- topic_name: "/tof/camera_info"
  ros_type_name: "sensor_msgs/msg/CameraInfo"
  gz_type_name: "gz.msgs.CameraInfo"

- topic_name: "/tof/left"
  ros_type_name: "sensor_msgs/msg/Image"
  gz_type_name: "gz.msgs.Image"

- topic_name: "/tof/left/points"
  ros_type_name: "sensor_msgs/msg/PointCloud2"
  gz_type_name: "gz.msgs.PointCloudPacked"

- topic_name: "/tof/right"
  ros_type_name: "sensor_msgs/msg/Image"
  gz_type_name: "gz.msgs.Image"

- topic_name: "/tof/right/points"
  ros_type_name: "sensor_msgs/msg/PointCloud2"
  gz_type_name: "gz.msgs.PointCloudPacked"

# Husky topics
- ros_topic_name: "husky/enable"
  gz_topic_name: "/model/marble_husky_sensor_config_5/enable"
  ros_type_name: "std_msgs/msg/Bool"
  gz_type_name: "gz.msgs.Boolean"

- ros_topic_name: "husky/odometry"
  gz_topic_name: "/model/marble_husky_sensor_config_5/odometry"
  ros_type_name: "nav_msgs/msg/Odometry"
  gz_type_name: "gz.msgs.Odometry"

- ros_topic_name: "husky/tf"
  gz_topic_name: "/model/marble_husky_sensor_config_5/tf"
  ros_type_name: "tf2_msgs/msg/TFMessage"
  gz_type_name: "gz.msgs.Pose_V"

# TODO: add fixed world frame if it is available in gz topics
# Create parser maybe using this example:
# https://github.com/gazebosim/ros_gz/blob/jazzy/ros_gz_sim_demos/launch/sdf_parser.launch.py